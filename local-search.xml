<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Unity复刻尼尔：机械纪元-动作整理分析</title>
    <link href="/2022/03/11/unity-nier-animtion-analyse/"/>
    <url>/2022/03/11/unity-nier-animtion-analyse/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p><strong>申明：本文为笔记，仅供学习交流，严禁用于商业用途。</strong></p><h3 id="一、工具准备"><a href="#一、工具准备" class="headerlink" title="一、工具准备"></a>一、工具准备</h3><ul><li>Bayonetta Audio Tools：尼尔.dat文件解包打包软件，后面需要用到再说明</li></ul><p>：<a href="https://pan.baidu.com/s/1nL6pDJ5-iKS5fXy944puQg?pwd=4681">下载地址</a></p><h3 id="二、重新命名文件（十六进制转十进制）"><a href="#二、重新命名文件（十六进制转十进制）" class="headerlink" title="二、重新命名文件（十六进制转十进制）"></a>二、重新命名文件（十六进制转十进制）</h3><ul><li><p>我们会发现动作数据mot文件名称是用十六进制命名的，<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646639909564-6a80632b-b8a8-4e8c-87cc-3aad95e8a62d.png#clientId=u1169fb63-afd6-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=180&id=ua18cf2af&margin=%5Bobject%20Object%5D&name=image.png&originHeight=180&originWidth=159&originalType=binary&ratio=1&rotation=0&showTitle=false&size=4741&status=done&style=none&taskId=ud21e0889-71c0-49e7-a297-26cd5c536df&title=&width=159">很难阅读而且在软件中查看也是乱序的，所以我们现在把mot文件重新命名为十进制方便我们后续使用。</p></li><li><p>使用Bayonetta Audio Tools工具，拖拽pl000f.dat文件到Bayonetta Audio Tools工具下的PlatinumDat.exe上面，软件就会解包.dat数据。解包后我们会得到一批mot、bxm文件<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646640144021-fc64be34-fb40-47bd-84a4-b28fc59b8004.png#clientId=u1169fb63-afd6-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=265&id=u02cd8b3b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=265&originWidth=213&originalType=binary&ratio=1&rotation=0&showTitle=false&size=7525&status=done&style=none&taskId=ub5181f04-7b80-4f67-8a20-87f3b4df48f&title=&width=213"></p></li><li><p>编写代码对文件名称进行批量转换</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">MenuItem(<span class="hljs-string">&quot;尼尔工具箱/重新命名文件（十六进制转十进制）&quot;</span>)</span>]<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span>  <span class="hljs-title">RenameFile</span>()</span><br>&#123;<br>    <span class="hljs-built_in">string</span> _path = EditorUtility.SaveFolderPanel(<span class="hljs-string">&quot;选择文件夹&quot;</span>, <span class="hljs-string">&quot;F:/NieRData/pl/&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<br>    <span class="hljs-built_in">string</span> _newPath = _path + <span class="hljs-string">&quot;_new&quot;</span>;<br>    <span class="hljs-keyword">if</span> (!Directory.Exists(_newPath))<br>    &#123;<br>        Directory.CreateDirectory(_newPath);<br>    &#125;<br><br>    <span class="hljs-built_in">string</span>[] _files = System.IO.Directory.GetFiles(_path);<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> _filePath <span class="hljs-keyword">in</span> _files)<br>    &#123;<br>        <span class="hljs-keyword">var</span> _extension = Path.GetExtension(_filePath);<br>        <span class="hljs-keyword">var</span> _fileNameWithoutExtension = Path.GetFileNameWithoutExtension(_filePath);<br>        <span class="hljs-keyword">var</span> _newFileName = _fileNameWithoutExtension;<br>        <span class="hljs-built_in">string</span>[] _tmp = _fileNameWithoutExtension.Split(<span class="hljs-string">&#x27;_&#x27;</span>);<br>        <span class="hljs-keyword">if</span> (_tmp.Length &gt;= <span class="hljs-number">2</span>)<br>        &#123;<br>            <span class="hljs-comment">//进制转换</span><br>            <span class="hljs-built_in">int</span> _id = Convert.ToInt32(_tmp[<span class="hljs-number">1</span>], <span class="hljs-number">16</span>);<br>            <span class="hljs-comment">//保留五位数，列如：00001</span><br>            <span class="hljs-keyword">var</span> _format = <span class="hljs-built_in">string</span>.Format(<span class="hljs-string">&quot;&#123;0:d5&#125;&quot;</span>, _id);<br>            _tmp[<span class="hljs-number">1</span>] = _format;<br>            _newFileName = _tmp[<span class="hljs-number">0</span>];<br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">1</span>; i &lt; _tmp.Length; i++)<br>            &#123;<br>                _newFileName += <span class="hljs-string">&quot;_&quot;</span> + _tmp[i];<br>            &#125;<br>            <span class="hljs-keyword">var</span> _srcfileName = _newPath + <span class="hljs-string">&quot;/&quot;</span> + _newFileName + _extension;<br>            File.Copy(_filePath, _srcfileName);<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-keyword">var</span> _srcfileName = _newPath + <span class="hljs-string">&quot;/&quot;</span> + _newFileName + _extension;<br>            File.Copy(_filePath, _srcfileName);<br>        &#125;<br>    &#125;<br>    <br>    EditorUtility.DisplayDialog(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;处理完成！&quot;</span>, <span class="hljs-string">&quot;OK&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>得到我们想要的数据<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646640450073-f6e4b18d-603a-49e9-97ae-82c5ac6eece7.png#clientId=u1169fb63-afd6-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=305&id=u5e2f0518&margin=%5Bobject%20Object%5D&name=image.png&originHeight=305&originWidth=206&originalType=binary&ratio=1&rotation=0&showTitle=false&size=9139&status=done&style=none&taskId=ub93b84e2-a210-4062-a2a0-99c2fac5aa7&title=&width=206">这些数据继续保留着后面还要使用，再把模型命名后的文件夹pl000f_new拖拽到Bayonetta Audio Tools工具下的PlatinumDat.exe上面，软件会重新把数据打包为.dat文件pl000f_new.dat</p></li></ul><h4 id="三、自动拆分FBX动画片段"><a href="#三、自动拆分FBX动画片段" class="headerlink" title="三、自动拆分FBX动画片段"></a>三、自动拆分FBX动画片段</h4><ul><li><p>导入到unity里后我们会发现所有动作在一个Clips里，我们还得手动拆分太麻烦了，上面我们已经得到.dat数据解包后已经重新命名过的xxx.mot文件，.mot就是包含动作数据的，现在我们要解析.mot文件生成我们要的动画数据，最后自动化拆分。</p></li><li><p>.mot文件头数据结构</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">struct</span> &#123;<br>    <span class="hljs-built_in">char</span>      id[<span class="hljs-number">4</span>]; <span class="hljs-comment">// &quot;mot\0&quot;</span><br>    uint32    hash;<br>    uint16    flag;<br>    int16     frameCount;<br>    uint32    recordOffset;<br>    uint32    recordNumber;<br>    uint32    unknown; <span class="hljs-comment">// usually 0 or 0x003c0000, maybe two uint16</span><br>    <span class="hljs-built_in">string</span>    animName; <span class="hljs-comment">// found at most 12 bytes with terminating 0</span><br>&#125; <br></code></pre></td></tr></table></figure></li><li><p>解析mot文件数据生成动画帧数据文件</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">MenuItem(<span class="hljs-string">&quot;尼尔工具箱/解析mot文件生成数据&quot;</span>)</span>]<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ReadMotFile</span>()</span><br>&#123;<br>    <span class="hljs-built_in">string</span> _path = EditorUtility.SaveFolderPanel(<span class="hljs-string">&quot;选择文件夹&quot;</span>, <span class="hljs-string">&quot;F:/NieRData/pl/&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<br>    <span class="hljs-keyword">var</span> _directoryName = Path.GetFileName(_path);<br>    <span class="hljs-built_in">int</span> _firstFrame = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">int</span> _lastFrame = _firstFrame - <span class="hljs-number">1</span>;<br>    List&lt;<span class="hljs-built_in">string</span>&gt; _list = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;();<br>    <span class="hljs-built_in">string</span>[] _files = System.IO.Directory.GetFiles(_path);<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> _filePath <span class="hljs-keyword">in</span> _files)<br>    &#123;<br>        <span class="hljs-keyword">var</span> _extension = Path.GetExtension(_filePath);<br>        <span class="hljs-keyword">var</span> _fileNameWithoutExtension = Path.GetFileNameWithoutExtension(_filePath);<br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">         mot文件头结构</span><br><span class="hljs-comment">         struct &#123;</span><br><span class="hljs-comment">                char      id[4]; // &quot;mot\0&quot;</span><br><span class="hljs-comment">                uint32    hash;</span><br><span class="hljs-comment">                uint16    flag;</span><br><span class="hljs-comment">                int16     frameCount;</span><br><span class="hljs-comment">                uint32    recordOffset;</span><br><span class="hljs-comment">                uint32    recordNumber;</span><br><span class="hljs-comment">                uint32    unknown; // usually 0 or 0x003c0000, maybe two uint16</span><br><span class="hljs-comment">                string    animName; // found at most 12 bytes with terminating 0</span><br><span class="hljs-comment">            &#125; </span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">if</span> (_extension.Equals(<span class="hljs-string">&quot;.mot&quot;</span>))<br>        &#123;<br>            <span class="hljs-keyword">var</span> _fByte = File.ReadAllBytes(_filePath);<br>            <span class="hljs-comment">//读取动画片段总帧数</span><br>            <span class="hljs-keyword">var</span> _frameCount = BitConverter.ToInt16(_fByte, <span class="hljs-number">10</span>);<br>            _lastFrame += _frameCount;<br>            _list.Add(<span class="hljs-string">$&quot;<span class="hljs-subst">&#123;_firstFrame&#125;</span>|<span class="hljs-subst">&#123;_lastFrame&#125;</span>|<span class="hljs-subst">&#123;_fileNameWithoutExtension&#125;</span>&quot;</span>);<br>            _firstFrame += _frameCount;<br>        &#125;<br>    &#125;<br><br>    File.WriteAllLines(_path + <span class="hljs-string">$&quot;/<span class="hljs-subst">&#123;_directoryName&#125;</span>.txt&quot;</span>, _list);<br>    EditorUtility.DisplayDialog(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;解析成功！&quot;</span>, <span class="hljs-string">&quot;OK&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>读取帧数据自动拆分FBX动画数据</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> Clip数据</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">FbxClipData</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> mName;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> mFirstFrame;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> mLastFrame;<br>&#125;<br><br><br>[<span class="hljs-meta">MenuItem(<span class="hljs-string">&quot;尼尔工具箱/自动拆分FBX动画片段&quot;</span>)</span>]<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SplitFbxClip</span>()</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (EditorUtility.DisplayDialog(<span class="hljs-string">&quot;自动拆分FBX动画片段&quot;</span>, <span class="hljs-string">&quot;确认是否已在Project窗口下选中了要处理的FBX&quot;</span>, <span class="hljs-string">&quot;确定&quot;</span>, <span class="hljs-string">&quot;取消&quot;</span>))<br>    &#123;<br>        UnityEngine.Object[] _objects = Selection.GetFiltered(<span class="hljs-keyword">typeof</span>(UnityEngine.Object), SelectionMode.DeepAssets);<br>        <span class="hljs-built_in">int</span> _count = <span class="hljs-number">0</span>;<br>        <span class="hljs-built_in">int</span> _objectsLength = _objects.Length;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> obj <span class="hljs-keyword">in</span> _objects)<br>        &#123;<br>            _count++;<br>            <span class="hljs-built_in">string</span> _assetPath = AssetDatabase.GetAssetPath(obj);<br>            <span class="hljs-keyword">if</span> (Path.GetExtension(_assetPath)?.ToLower() != <span class="hljs-string">&quot;.fbx&quot;</span>)<br>            &#123;<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br><br>            EditorUtility.DisplayProgressBar(<span class="hljs-string">&quot;正在处理,请稍后&quot;</span>, _assetPath, (<span class="hljs-built_in">float</span>) (_count) / _objectsLength);<br>            List&lt;FbxClipData&gt; _fbxClipDataList = <span class="hljs-keyword">new</span> List&lt;FbxClipData&gt;();<br><br>            <span class="hljs-built_in">string</span> _extension = Path.ChangeExtension(_assetPath, <span class="hljs-string">&quot;txt&quot;</span>);<br>            <span class="hljs-keyword">if</span> (!File.Exists(_extension))<br>            &#123;<br>                Debug.LogError(_extension + <span class="hljs-string">&quot; 数据文件不存在！&quot;</span>);<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.IsNullOrEmpty(_extension))<br>            &#123;<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br><br>            StreamReader _reader = <span class="hljs-keyword">new</span> StreamReader(_extension);<br>            <span class="hljs-built_in">string</span> _line;<br>            <span class="hljs-keyword">while</span> ((_line = _reader.ReadLine()) != <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-built_in">string</span>[] _info = _line.Split(<span class="hljs-string">&#x27;|&#x27;</span>);<br>                FbxClipData _fbxClipData = <span class="hljs-keyword">new</span> FbxClipData<br>                &#123;<br>                    mFirstFrame = <span class="hljs-built_in">int</span>.Parse(_info[<span class="hljs-number">0</span>]),<br>                    mLastFrame = <span class="hljs-built_in">int</span>.Parse(_info[<span class="hljs-number">1</span>]), <br>                    mName = _info[<span class="hljs-number">2</span>]<br>                &#125;;<br>                _fbxClipDataList.Add(_fbxClipData);<br>            &#125;<br>            _reader.Close();<br>            <br>            ModelImporter _modelImporter = AssetImporter.GetAtPath(_assetPath) <span class="hljs-keyword">as</span> ModelImporter;<br>            ArrayList _clipsList = <span class="hljs-keyword">new</span> ArrayList();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; _fbxClipDataList.Count; i++)<br>            &#123;<br>                ModelImporterClipAnimation _clipAnimation = <span class="hljs-keyword">new</span> ModelImporterClipAnimation<br>                &#123;<br>                    name = _fbxClipDataList[i].mName,<br>                    firstFrame = _fbxClipDataList[i].mFirstFrame,<br>                    lastFrame = _fbxClipDataList[i].mLastFrame<br>                &#125;;<br>                _clipsList.Add(_clipAnimation);<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (_modelImporter != <span class="hljs-literal">null</span>)<br>            &#123;<br>                _modelImporter.clipAnimations =<br>                    (ModelImporterClipAnimation[]) _clipsList.ToArray(<span class="hljs-keyword">typeof</span>(ModelImporterClipAnimation));<br>                _modelImporter.SaveAndReimport();<br>            &#125;<br>        &#125;<br>        <br>        AssetDatabase.Refresh();<br>        EditorUtility.ClearProgressBar();<br>        EditorUtility.DisplayDialog(<span class="hljs-string">&quot;提示&quot;</span>, <span class="hljs-string">&quot;处理完成&quot;</span>, <span class="hljs-string">&quot;OK&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>最后就可以得到拆分好的动作片段的数据了<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646649732532-2268d419-1ac3-4230-b3c4-cab61b473b6d.png#clientId=u1f17e11f-1786-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=431&id=uffe06534&margin=%5Bobject%20Object%5D&name=image.png&originHeight=833&originWidth=572&originalType=binary&ratio=1&rotation=0&showTitle=false&size=226978&status=done&style=none&taskId=u0e99c382-ee7b-428c-a67e-5c8d0ea324f&title=&width=296"></p></li></ul><h3 id="四、数据整理分析"><a href="#四、数据整理分析" class="headerlink" title="四、数据整理分析"></a>四、数据整理分析</h3><ul><li><strong>尼尔资源格式解析：</strong></li></ul><p>文件夹：<br>pl： 主角模型和动作        wd：场景        wp：武器、        um：NPC、        em：敌人<br>文件类型：<br>.dtt：模型和贴图                 .dat：动画</p><p>Tips：前缀编号相同则为一个角色资源， pl…f结尾且文件较大，一般是动画文件。</p><ul><li><strong>基本操作</strong>：</li></ul><p>弱攻击、强攻击、冲刺、跳跃、二段跳<br>跳跃+强攻击 &#x3D; 上挑<br>长按弱|强攻击键 &#x3D; 特殊攻击<br>冲刺状态下+强攻击 &#x3D; 冲刺攻击<br>冲刺+弱攻击 &#x3D; 旋转攻击<br>空中状态+强攻击 &#x3D; 下劈<br>空中状态+冲刺+强攻击 &#x3D; 斜向下下劈<br>闪避后攻击+弱攻击|强攻击 &#x3D; 闪避攻击</p><ul><li><strong>角色动作id整理</strong>：</li></ul><p>在查看武器动画时会发现武器种类是有划分id的，而且人物动画和武器动画id是有匹配关系的<br>通用动作：    动画id：[0<del>256)            十六进制：[0</del>99)<br>小型剑000：    动画id：[256<del>512)        十六进制：[100</del>200)<br>大型剑200：    动画id：[512<del>768)        十六进制：[200</del>300)<br>抢400：        动画id：[768<del>1024)        十六进制：[300</del>400)<br>格斗600：    动画id：[1024<del>1280)        十六进制：[400</del>500)<br>空手：        动画id：[1280<del>1536)        十六进制：[500</del>600)</p><ul><li><strong>小型剑连招：</strong></li></ul><p>弱连击：动作id【00256、00257、00258、00259、00260、00261、00262】<br>弱长按：动作id【】<br>强连击：动作id【00272、00275、00278】<br>强长按：动作id【】</p><ul><li><strong>抢连招：</strong></li></ul><p>弱连击：动作id【00768、00769、00770、00771、00772、00773】</p><h3 id="五、最后把角色动画和武器动画匹配上"><a href="#五、最后把角色动画和武器动画匹配上" class="headerlink" title="五、最后把角色动画和武器动画匹配上"></a>五、最后把角色动画和武器动画匹配上</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/gif/21441051/1646998020346-c13ea1a6-a718-44df-8ac4-03d16060a592.gif#clientId=uc38da9b7-f9cf-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u0b658452&margin=%5Bobject%20Object%5D&name=d8vem-ufld5.gif&originHeight=208&originWidth=368&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1639501&status=done&style=none&taskId=ueab3af6a-1230-4c58-88a9-a665258a4e0&title="></p><hr><p>参考：<br><a href="https://forum.xentax.com/viewtopic.php?f=10&t=16011&start=120">https://forum.xentax.com/viewtopic.php?f=10&t=16011&start=120</a><br><a href="https://steamcommunity.com/sharedfiles/filedetails/?id=1178661446">https://steamcommunity.com/sharedfiles/filedetails/?id=1178661446</a><br><a href="https://www.cgjoy.com/thread-217954-1-1.html">https://www.cgjoy.com/thread-217954-1-1.html</a><br><a href="https://www.bilibili.com/video/BV14W411T737?t=455">https://www.bilibili.com/video/BV14W411T737?t=455</a></p>]]></content>
    
    
    <categories>
      
      <category>Unity复刻尼尔：机械纪元</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Unity</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Unity复刻尼尔：机械纪元-动作导出</title>
    <link href="/2022/03/08/unity-nier-animtion/"/>
    <url>/2022/03/08/unity-nier-animtion/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>&lt;<strong>申明：本文为笔记，仅供学习交流，严禁用于商业用途。</strong></p><h3 id="一、工具准备"><a href="#一、工具准备" class="headerlink" title="一、工具准备"></a>一、工具准备</h3><ul><li>Noesis：提取工具</li></ul><p> ：<a href="https://richwhitehouse.com/index.php?content=inc_projects.php&showproject=91">下载地址</a></p><ul><li>noesis_bayonetta_pc：noesis插件用来提取尼尔动作文件，下载后解压放到对应Noesis软件目录下。</li></ul><p> ：<a href="https://github.com/Kerilk/noesis_bayonetta_pc">下载地址</a></p><h4 id="二、导出动作数据"><a href="#二、导出动作数据" class="headerlink" title="二、导出动作数据"></a>二、导出动作数据</h4><ul><li>Noesis打开pl0000.dtt文件，会提示<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646638699792-9d5eacc9-3591-4f9c-9af4-f538cd30d37e.png#clientId=u1169fb63-afd6-4&from=paste&height=370&id=u83dcfeae&margin=%5Bobject%20Object%5D&name=image.png&originHeight=778&originWidth=1155&originalType=binary&ratio=1&size=63908&status=done&style=none&taskId=ub8fd486d-e531-403b-91b8-e65b0793641&width=550" alt="image.png">，选择OK后选择pl000f.dat(动作数据文件)文件，再弹出<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646638779813-19490ae3-374b-47e0-b73d-8bda59c5f73b.png#clientId=u1169fb63-afd6-4&from=paste&height=54&id=u6fea8bfd&margin=%5Bobject%20Object%5D&name=image.png&originHeight=120&originWidth=471&originalType=binary&ratio=1&size=5598&status=done&style=none&taskId=ua0137e33-3a24-4bc2-a497-eaf6f533a6d&width=212" alt="image.png">选择取消。就可以查看角色所以动作文件了<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646638946751-73b46574-277a-49f7-b0c2-76ad965422bf.png#clientId=u1169fb63-afd6-4&from=paste&height=286&id=ufcd2db94&margin=%5Bobject%20Object%5D&name=image.png&originHeight=785&originWidth=1354&originalType=binary&ratio=1&size=266797&status=done&style=none&taskId=u7eb7deaa-e901-4d99-8fd2-320f6ecd550&width=494" alt="image.png"></li><li>导出动作数据，选择FIle-&gt;Export导出模型数据<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646618162375-c738a153-9809-458f-877a-c7a8e526969b.png#clientId=u98df1ac2-2012-4&from=paste&height=196&id=en8vY&margin=%5Bobject%20Object%5D&name=image.png&originHeight=196&originWidth=193&originalType=binary&ratio=1&size=5851&status=done&style=none&taskId=u69d42b5f-35b5-4ecd-b650-99310cd93cd&width=193" alt="image.png">，选择导出FBX格式点击Export按钮-&gt;点击OK<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646645292941-edc43083-acf4-4a54-a522-aafcda0bcccb.png#clientId=u1f17e11f-1786-4&from=paste&height=254&id=AgzyY&margin=%5Bobject%20Object%5D&name=image.png&originHeight=472&originWidth=478&originalType=binary&ratio=1&size=24993&status=done&style=none&taskId=u393a4292-5450-489f-aae7-5ccd4f4f76b&width=257" alt="image.png">-&gt;在弹出的文件选择pl000f.dat文件，得到带动作数据的FBX文件。</li><li>在unity里导出就可以查看动作了<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646646262675-cfdc04e9-3668-443f-b12b-539408b47cff.png#clientId=u1f17e11f-1786-4&from=paste&height=379&id=t9P4l&margin=%5Bobject%20Object%5D&name=image.png&originHeight=986&originWidth=585&originalType=binary&ratio=1&size=228930&status=done&style=none&taskId=u1909de92-3ac4-4ab0-a8dc-0f15f7a72f2&width=225" alt="image.png"></li></ul>]]></content>
    
    
    <categories>
      
      <category>Unity复刻尼尔：机械纪元</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Unity</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Unity复刻尼尔：机械纪元-模型导出</title>
    <link href="/2022/03/07/unity-nier-mode/"/>
    <url>/2022/03/07/unity-nier-mode/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p><strong>申明：本文为笔记，仅供学习交流，严禁用于商业用途。</strong></p><ul><li>购买下载尼尔游戏工程</li><li>下载Noesis提取工具：<a href="https://richwhitehouse.com/index.php?content=inc_projects.php&showproject=91">下载地址</a></li><li>运行Noesis，找到游戏工程下data-&gt;data006.cpk和data100.cpk(包含dlc模型数据)文件，在Noesis内双击这两个文件进行解包数据</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646617728531-68aabe20-d8f8-464e-bd4a-a6e8752f74b4.png#clientId=u98df1ac2-2012-4&from=paste&height=271&id=ub2bc749f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=777&originWidth=1160&originalType=binary&ratio=1&size=78051&status=done&style=none&taskId=u2c109d21-5bb1-41e4-968d-54e4c30f8e1&width=405" alt="image.png">，</p><ul><li><p>解包后pl文件夹里的数据<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646472686158-78746b57-8ca6-4170-90da-9f1978864cdf.png#clientId=u3c7b96c2-e40b-4&from=paste&height=102&id=u29aa36a7&margin=%5Bobject%20Object%5D&name=image.png&originHeight=183&originWidth=481&originalType=binary&ratio=1&size=9796&status=done&style=none&taskId=u7c430dc7-161c-476d-ad86-9fed02277dd&width=269" alt="image.png"></p></li><li><p>在Noesis打开pl0000.dtt文件就可以预览模型了</p></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646617791683-801e6a25-6a29-4b75-8bc9-9dbc3cf275ed.png#clientId=u98df1ac2-2012-4&from=paste&height=303&id=u62ca771f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=778&originWidth=1154&originalType=binary&ratio=1&size=187256&status=done&style=none&taskId=u72d88b87-9970-435d-ac2f-3ca5b98a597&width=450" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646617916817-8ca32abe-8036-448a-a487-8df2643344bf.png#clientId=u98df1ac2-2012-4&from=paste&height=301&id=udcc88d2e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=775&originWidth=1158&originalType=binary&ratio=1&size=204817&status=done&style=none&taskId=u4129e6bd-dc4f-41a8-b2a7-b29e1bc2946&width=450" alt="image.png"></p><ul><li>选择FIle-&gt;Export导出模型数据<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646618162375-c738a153-9809-458f-877a-c7a8e526969b.png#clientId=u98df1ac2-2012-4&from=paste&height=196&id=u45a01a1f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=196&originWidth=193&originalType=binary&ratio=1&size=5851&status=done&style=none&taskId=u69d42b5f-35b5-4ecd-b650-99310cd93cd&width=193" alt="image.png">，选择导出FBX格式<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646618099627-23ce161c-3a3c-4df1-adfe-6f37c82ed74a.png#clientId=u98df1ac2-2012-4&from=paste&height=318&id=u3ff8ee1b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=471&originWidth=475&originalType=binary&ratio=1&size=19551&status=done&style=none&taskId=u5091b8d2-419e-4902-b96f-0f1187affd1&width=321" alt="image.png">，得到导出后的数据<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646473678938-caf57b88-e7b9-4fd4-8841-fe91a7f6727c.png#clientId=u3c7b96c2-e40b-4&from=paste&height=318&id=uec9aef3e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=318&originWidth=811&originalType=binary&ratio=1&size=124133&status=done&style=none&taskId=u15b54ddc-fa3a-4c16-a177-b86c59e57ff&width=811" alt="image.png"></li><li>把fxb导到unity引擎看看效果<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646474097693-2842c9f6-fc1a-40f9-a60f-251fa8ca9f20.png#clientId=u3c7b96c2-e40b-4&from=paste&height=341&id=ufaa42c44&margin=%5Bobject%20Object%5D&name=image.png&originHeight=895&originWidth=1585&originalType=binary&ratio=1&size=394433&status=done&style=none&taskId=u15cc12d4-49dd-442d-9c5b-3797f61dbee&width=604" alt="image.png"></li><li>最后贴上材质球<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646474394778-2e28e64b-9d54-4317-b4b9-51a6cdb78578.png#clientId=u3c7b96c2-e40b-4&from=paste&height=977&id=u07577c67&margin=%5Bobject%20Object%5D&name=image.png&originHeight=977&originWidth=1870&originalType=binary&ratio=1&size=2845094&status=done&style=none&taskId=ueb1655f2-9d50-40c3-9636-a33f35179e5&width=1870" alt="image.png"></li></ul><p>备注：</p><ol><li>导出的时候可以选择dae格式导出，dae格式导出会带上材质信息，然后用3dmax软件再导出fbx</li><li>模型是同时包含多个时装的，在用的时候需要手动隐藏节点</li><li>直接导出的fbx数据导入到unity时，大小单位不一致，需要在unity模型设置里去掉Convert Units</li></ol>]]></content>
    
    
    <categories>
      
      <category>Unity复刻尼尔：机械纪元</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Unity</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Unity动态适配相机FOV</title>
    <link href="/2019/05/14/unity-camera-fov/"/>
    <url>/2019/05/14/unity-camera-fov/</url>
    
    <content type="html"><![CDATA[<p>根据设置的视野，在不同分辨率下自动调整相机FOV </p><span id="more"></span><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> UnityEngine;<br> <br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 相机FOV自动调整</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 根据设置的视野自动调整相机FOV</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CameraFOVAdjust</span> : <span class="hljs-title">MonoBehaviour</span><br>&#123;<br>    [<span class="hljs-meta">Tooltip(<span class="hljs-string">&quot;距离&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">float</span> distance = <span class="hljs-number">20f</span>;<br>    [<span class="hljs-meta">Tooltip(<span class="hljs-string">&quot;宽度&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">float</span> frustumWidth = <span class="hljs-number">40.3f</span>;<br>    [<span class="hljs-meta">Tooltip(<span class="hljs-string">&quot;限制最大的FOV值&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">float</span> maxFOV = <span class="hljs-number">65</span>;<br> <br>    <span class="hljs-keyword">private</span> Camera mainCamera;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">float</span> cameraAspect;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Start</span>()</span><br>    &#123;<br>        mainCamera = Camera.main;<br>        CameraAdjust();<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Update</span>()</span><br>    &#123;<br><span class="hljs-meta">#<span class="hljs-keyword">if</span> UNITY_EDITOR</span><br>        CameraAdjust();<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br>    &#125;<br> <br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 动态调整相机FOV，使不同分辨率下相机能看到相同的宽度视野</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    [<span class="hljs-meta">ContextMenu(<span class="hljs-string">&quot;执行&quot;</span>)</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CameraAdjust</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (mainCamera == <span class="hljs-literal">null</span>) <span class="hljs-keyword">return</span>;<br>        <span class="hljs-comment">//分辨率发生改变时才需要重新刷新</span><br>        <span class="hljs-keyword">if</span> (cameraAspect.Equals(mainCamera.aspect)) <span class="hljs-keyword">return</span>;<br> <br>        cameraAspect = mainCamera.aspect;<br>        <span class="hljs-comment">//计算Fov</span><br>        <span class="hljs-built_in">float</span> _fov = <span class="hljs-number">2</span> * Mathf.Atan(frustumWidth / cameraAspect * <span class="hljs-number">0.5f</span> / distance) * Mathf.Rad2Deg;<br>        <span class="hljs-comment">//防止Fov过大，设置最大值</span><br>        <span class="hljs-keyword">if</span> (maxFOV &gt; <span class="hljs-number">0</span> &amp;&amp;_fov &gt; maxFOV)<br>        &#123;<br>            _fov = maxFOV;<br>        &#125;<br>        mainCamera.fieldOfView = _fov;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Unity开发笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Unity</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
