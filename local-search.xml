<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Unity UI适配总结</title>
    <link href="/2022/03/17/unity-ugui-adaptive/"/>
    <url>/2022/03/17/unity-ugui-adaptive/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>随着技术的发展，Android和iOS的设备种类越来越多，有普通16:9的屏幕，也有最近几年出来的全面屏，水滴屏，刘海屏等，以及各种平板设备。本篇文章是对项目中的UI适配做的总结归纳。</p><h1 id="二、设备屏幕数据分析"><a href="#二、设备屏幕数据分析" class="headerlink" title="二、设备屏幕数据分析"></a>二、设备屏幕数据分析</h1><ul><li>Android设备分辨率分布情况：</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647396807746-467378d4-07ae-4a04-8427-4240181be484.png#clientId=uc2ad04dd-f0bf-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=u8d0d26d6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=753&originWidth=1176&originalType=url&ratio=1&rotation=0&showTitle=true&size=233859&status=done&style=none&taskId=u90b957d2-e1eb-4cc6-a5e4-47206b49ee2&title=Android%E5%B1%8F%E5%B9%95%E5%88%86%E8%BE%A8%E7%8E%87%E5%88%86%E5%B8%83-%E6%95%B0%E6%8D%AE%E6%9D%A5%E6%BA%90%E7%BD%91%E7%BB%9C" alt="image.png" title="Android屏幕分辨率分布-数据来源网络"></p><ul><li><p>IOS设备分辨率情况：</p><table><thead><tr><th><strong>设备</strong></th><th><strong>分辨率</strong></th><th><strong>屏幕比例</strong></th></tr></thead><tbody><tr><td><strong>iPhone 13 Pro Max，12 Pro Max</strong></td><td>1284 × 2778</td><td>9 : 19.5</td></tr><tr><td><strong>iPhone 13 &#x2F; 13 Pro，12 &#x2F; 12 Pro</strong></td><td>1170 × 2532</td><td>9 : 19.5</td></tr><tr><td><strong>iPhone 13 mini，12 mini</strong></td><td>1080 × 2340</td><td>9 : 19.5</td></tr><tr><td><strong>iPhone 11 Pro Max、 XS Max</strong></td><td>1242 × 2688</td><td>9 : 19.5</td></tr><tr><td><strong>iPhone 11 Pro，XS， X</strong></td><td>1125 × 2436</td><td>9 : 19.5</td></tr><tr><td><strong>iPhone 11，XR</strong></td><td>828 × 1792</td><td>9 : 19.5</td></tr><tr><td><strong>iPhone 8+，7+，6s+，6+</strong></td><td>1242 × 2208</td><td>9 : 16</td></tr><tr><td><strong>iPhone SE，8，7，6s，6</strong></td><td>750 × 1334</td><td>9 : 19.5</td></tr></tbody></table></li><li><p>通过分析上面的数据我们得到了一些结论，现在Android主流的设备基本都是20:9和19.5:9的比例了，IOS上已经是统一规格使用的是19.5:9了。</p></li><li><p>下面是主流设备分辨率的信息，按照个人理解的市场占有排序从多到少，不够严谨，数据仅供参考 。</p></li></ul><p>手机：</p><pre><code class="hljs">  - 2400x1080=20:9=2.2222222  - 2340x1080=19.5:9=2.16666666  - 3200x1440=20:9=2.2222222  - 1920x1080=16:9=1.7777777  - 2520x1080=21:9=2.333333333</code></pre><p>平板：</p><pre><code class="hljs">  - 2048x1536=4:3=1.33333333  - 2048x1536=7:5=1.4  - 2560x1600=16:10=1.6</code></pre><h1 id="三、UGUI基础知识点"><a href="#三、UGUI基础知识点" class="headerlink" title="三、UGUI基础知识点"></a>三、UGUI基础知识点</h1><h4 id="Pivot轴心"><a href="#Pivot轴心" class="headerlink" title="Pivot轴心"></a>Pivot轴心</h4><p>此RectTransform中围绕其旋转的标准化位置，RectTransform的位置、旋转和缩放都是围绕轴心来进行的。</p><h4 id="Anchor锚点"><a href="#Anchor锚点" class="headerlink" title="Anchor锚点"></a>Anchor锚点</h4><p>定义UI布局的核心属性，详细描述查看<a href="https://docs.unity3d.com/cn/2019.4/Manual/UIBasicLayout.html">官方文档</a></p><h4 id="其他重要属性含义"><a href="#其他重要属性含义" class="headerlink" title="其他重要属性含义"></a>其他重要属性含义</h4><ul><li>offsetMax &#x3D; 矩形右上角相对于右上锚点的偏移。</li><li>offsetMin &#x3D; 矩形左下角相对于左下锚点的偏移。</li><li>sizeDelta &#x3D;  offsetMax - offsetMin &#x3D;（自身矩形宽 - 锚点的宽， 自身矩形高 - 锚点的高）</li><li>anchoredPositon &#x3D; offsetMin + Vector2.Scale(sizeDelta, rect.pivot) &#x3D; 矩形左下点相对于父节点轴心坐标 - 锚点左下点相对于父节点轴心坐标 + sizeDelta* 自身轴心<ul><li>几何意义<ol><li>Pivot在自身区域的比例，映射到Anchors上的点，再与Pivot的相对位置，就是anchoredPosition。</li><li>从anchors的pivot位置，指向RectTransform的pivot的一个向量<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp">Vector2 localPosition2D = <span class="hljs-keyword">new</span> Vector2(rect.localPosition.x, rect.localPosition.y);<br>Vector2 anchorMinPos = parentRect.rect.min + Vector2.Scale(rect.anchorMin, parentRect.rect.size);<br>Vector2 rectMinPos = rect.rect.min + localPosition2D;<br>Vector2 offsetMin = rectMinPos - anchorMinPos;<br><br>Vector2 anchorMaxPos = parentRect.rect.max - Vector2.Scale(Vector2.one - rect.anchorMax, parentRect.rect.size);<br>Vector2 rectMaxPos = rect.rect.max + localPosition2D;<br>Vector2 offsetMax = rectMaxPos - anchorMaxPos;<br><br>Vector2 sizeDelta = offsetMax - offsetMin;<br>Vector2 anchoredPosition = offsetMin + Vector2.Scale(sizeDelta, rect.pivot); <br></code></pre></td></tr></table></figure></li></ol></li></ul></li></ul><h1 id="四、UI布局适配"><a href="#四、UI布局适配" class="headerlink" title="四、UI布局适配"></a>四、UI布局适配</h1><h3 id="Canvas-Scaler-设置"><a href="#Canvas-Scaler-设置" class="headerlink" title="Canvas Scaler 设置"></a>Canvas Scaler 设置</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647417508095-31bf26e0-995e-470a-9849-9978718cff0f.png#clientId=uc2ad04dd-f0bf-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=128&id=u9f40d15f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=128&originWidth=503&originalType=binary&ratio=1&rotation=0&showTitle=false&size=13232&status=done&style=none&taskId=u9e8b9b83-459f-4d73-a66f-ac3a48a0ea2&title=&width=503" alt="image.png"></p><ol><li>UI Scale Mode选择Scale With Screen Size。</li><li>Reference Resolution 使用1334x750也就是16:9的比例，这个是UI设计的<strong>基础画布</strong>大小。</li><li>Screen Match Mode选择Expand：水平或垂直扩展画布区域，使画布不会小于参考。</li></ol><p>设置好Canvas Scaler基本上就能满足大部分设备上的适配了，但是还是存在一些问题：UI背景拉伸变形、左右对齐的UI元素被刘海遮挡、GridLayoutGroup数量分布等等问题。</p><h3 id="基于锚点的布局适配"><a href="#基于锚点的布局适配" class="headerlink" title="基于锚点的布局适配"></a>基于锚点的布局适配</h3><p>当我们在<strong>基础画布</strong>设计好UI的时候默认应该长这样子<br><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647481749502-706a77d9-6130-4e3a-8e1b-97ff1d25e53c.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=179&id=u029c5fa4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=375&originWidth=789&originalType=binary&ratio=1&rotation=0&showTitle=true&size=393203&status=done&style=none&taskId=uc0789b22-66a9-474b-b878-cfa1d01fd32&title=%E5%9C%A8%E5%92%8C%E9%BB%98%E8%AE%A4%E7%94%BB%E5%B8%83%E4%B8%80%E6%A0%B7%E6%AF%94%E4%BE%8B19%3A6%E6%89%8B%E6%9C%BA%E4%B8%8A%E7%9A%84%E6%98%BE%E7%A4%BA&width=377" alt="image.png" title="在和默认画布一样比例19:6手机上的显示"><br>但是在宽屏手上长这样<br><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647482314908-bd63fa76-ae2f-42c7-a865-34ebabda8394.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=183&id=u5294157d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=385&originWidth=793&originalType=binary&ratio=1&rotation=0&showTitle=true&size=471062&status=done&style=none&taskId=u62923e30-6802-4a2a-bacb-32038fee8a2&title=iPhone%20X%E4%B8%8A%E7%9A%84%E6%98%BE%E7%A4%BA&width=377" alt="image.png" title="iPhone X上的显示"><br>发现UI元素都是居中的，使得手机左右两边留白的空间太大了，我们希望UI元素都能根据屏幕适配宽度，所以我们把标题改成了对齐左上角，分页签对齐左边，删选栏对齐右边， 中间的GridLayoutGroup使用stretch拉伸对齐整个屏幕，然后看看结果<br><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647483221377-40791cbf-d13a-40e8-8bd0-662edf3d0511.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=183&id=u7e4cdef3&margin=%5Bobject%20Object%5D&name=image.png&originHeight=386&originWidth=795&originalType=binary&ratio=1&rotation=0&showTitle=true&size=458061&status=done&style=none&taskId=u11c592e3-875a-4e93-8c44-d141846e5d4&title=%E4%BD%BF%E7%94%A8%E7%AE%80%E5%8D%95%E7%9A%84%E9%94%9A%E7%82%B9%E5%AF%B9%E9%BD%90%E5%90%8E%E5%9C%A8iPhone%20X%E4%B8%8A%E7%9A%84%E6%98%BE%E7%A4%BA&width=377" alt="image.png" title="使用简单的锚点对齐后在iPhone X上的显示"><br>我们会发现存在三个问题：</p><ol><li>左边页签被刘海遮挡了</li><li>中间的GridLayoutGroup里的个数布局不能动态适配</li><li>背景被拉伸变形了</li></ol><h4 id="刘海适配"><a href="#刘海适配" class="headerlink" title="刘海适配"></a>刘海适配</h4><p>因为现在大部分全面屏手机都在是手机顶部放置摄像头，所以造成手机屏幕顶部会出现刘海，水滴，挖孔等等情况，从而引起横屏游戏对齐左右两边的UI控件会被这些东西阻挡。</p><p>解决刘海遮挡问题有几种方案：<br>1.通过代码<a href="https://docs.unity3d.com/cn/2019.4/ScriptReference/Screen.html">Screen.safeArea</a>获取到设备的安全范围，根据这个值动态调整UI的 Anchores，但是获取Safe Area的API在一些Android上是拿不到值的，原因是Google是在Android 9.0之后才统一接口的。但是我们要支持Android 9.0之前的设备所以不能直接使用这个方案。<br>2.通过设置Anchors的anchorMax和anchorMin实现随着手机比例大于基准比例16:9的时候左右两边会动态预留出空间，anchorMin设置为(x，0)，anchorMax设置为(1-x，1)，x&#x3D;60&#x2F;(1624-1334)&#x3D;0.2，使UI能整体对齐下面图上的两条线。</p><blockquote><p>x&#x3D;60&#x2F;(1624-1334)&#x3D;0.2，1334是基础画布的宽，1624是iPhoneX在基础画布上的同比宽，60是刘海的宽度</p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647492022799-557088f5-2c66-4875-83b8-0af18d6e8c3b.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=414&id=ubd42a9cc&name=image.png&originHeight=414&originWidth=770&originalType=binary&ratio=1&rotation=0&showTitle=true&size=354438&status=done&style=none&taskId=u49e69802-37cb-431e-b98c-443f09ab1c2&title=anchorMin%3D%280.2%EF%BC%8C0%29%EF%BC%8CanchorMax%3D%280.8%EF%BC%8C1%29&width=770" alt="image.png" title="anchorMin=(0.2，0)，anchorMax=(0.8，1)"><br>可以得到一个能在16:9和19.5:9带刘海的设备上都有着不错的适配效果的方案。<br><img src="https://cdn.nlark.com/yuque/0/2022/gif/21441051/1647491239284-041e582d-d72c-4caf-bba0-bda83f2ed6e8.gif#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=ubb1bcc7a&name=GIF%202022-3-17%2012-22-12.gif&originHeight=448&originWidth=796&originalType=binary&ratio=1&rotation=0&showTitle=true&size=236947&status=done&style=none&taskId=ub7676abf-196a-4948-8c46-7e156c31517&title=iPhone8%E5%92%8CiPhone%20X%E4%B8%8A%E7%9A%84%E9%80%82%E9%85%8D%E6%95%88%E6%9E%9C" alt="GIF 2022-3-17 12-22-12.gif" title="iPhone8和iPhone X上的适配效果"><br>在其他设备上的情况：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647493071770-a50465dc-28ae-4e5c-8527-0adf4a8b9aee.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=166&id=u24c81577&name=image.png&originHeight=271&originWidth=573&originalType=binary&ratio=1&rotation=0&showTitle=true&size=266259&status=done&style=none&taskId=ub94bb672-09ed-4099-88ec-9a3732c44a2&title=%E5%8D%8E%E4%B8%BA%20P40%20Pro&width=350" alt="image.png" title="华为 P40 Pro"><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647493544830-85f9e98b-b08e-407e-baa9-9e605e953d49.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=168&id=u7ccf198d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=268&originWidth=557&originalType=binary&ratio=1&rotation=0&showTitle=true&size=237908&status=done&style=none&taskId=ud8021825-2a54-49b9-a392-c0c18901747&title=%E7%BA%A2%E7%B1%B3%206Pro&width=350" alt="image.png" title="红米 6Pro"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647493155205-def09053-ab9c-4813-93e8-b100883dcce8.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=165&id=uda49d0ab&name=image.png&originHeight=268&originWidth=570&originalType=binary&ratio=1&rotation=0&showTitle=true&size=261963&status=done&style=none&taskId=ue53b5b75-f004-4139-85aa-b75c6727a2d&title=OnePlus%206T&width=350" alt="image.png" title="OnePlus 6T"><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647493463364-85a9359f-cff8-4e24-bd02-6d9f6709f5a2.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=174&id=u26c3ee85&name=image.png&originHeight=264&originWidth=532&originalType=binary&ratio=1&rotation=0&showTitle=true&size=240946&status=done&style=none&taskId=ubedae79e-76a4-4b5e-8378-ed992be20f9&title=%E4%B8%89%E6%98%9F%20S10e&width=350" alt="image.png" title="三星 S10e"></p><h4 id="GridLayoutGroup适配"><a href="#GridLayoutGroup适配" class="headerlink" title="GridLayoutGroup适配"></a>GridLayoutGroup适配</h4><p>GridLayoutGroup布局方面适配其实比较简单，我们只要根据GridLayoutGroup的Rect Transform的宽度动态计算出Spacing的值和Consstrain Count值就可以和上面提到的Anchors适配搭配使用<br><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647498637664-a9da87fe-c8f2-4c55-894b-e4ff416c901e.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=333&id=u14da3d3f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=438&originWidth=507&originalType=binary&ratio=1&rotation=0&showTitle=true&size=36453&status=done&style=none&taskId=ucc5614a7-cccd-4036-b8d3-fcc467732a4&title=GridLayoutGroup%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE&width=386" alt="image.png" title="GridLayoutGroup相关设置"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647498832190-589391fd-b0d8-4275-ad1e-0faf92604073.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=172&id=u995900c1&margin=%5Bobject%20Object%5D&name=image.png&originHeight=394&originWidth=801&originalType=binary&ratio=1&rotation=0&showTitle=true&size=477668&status=done&style=none&taskId=uf2ae8e8f-62d2-4aa9-804f-72ad4e8b7c8&title=iPhone%2012%E4%B8%8A%E6%95%88%E6%9E%9C&width=350" alt="image.png" title="iPhone 12上效果"><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647498749378-7f7f5af5-ad2f-45aa-8ccf-149bef329f6e.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=162&id=u399b8334&margin=%5Bobject%20Object%5D&name=image.png&originHeight=372&originWidth=802&originalType=binary&ratio=1&rotation=0&showTitle=true&size=475657&status=done&style=none&taskId=u469c6ca7-8214-41e8-8aed-8d463e4aaa9&title=%E7%BA%A2%E7%B1%B3%20Note7%E4%B8%8A%E6%95%88%E6%9E%9C&width=350" alt="image.png" title="红米 Note7上效果"></p><h4 id="背景适配"><a href="#背景适配" class="headerlink" title="背景适配"></a>背景适配</h4><ul><li>背景可被拉伸</li></ul><p>背景热更是可以被拉伸使用，那边直接把背景的适配调成<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647499084536-7042b423-5897-4b45-a17c-09c19f363023.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=61&id=uda785d0d&name=image.png&originHeight=61&originWidth=60&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1460&status=done&style=none&taskId=uabd957ef-963d-4b7b-a4ab-3c2bdaac368&title=&width=60" alt="image.png">，这样就可以直接铺满整个屏幕。</p><ul><li>背景不允许拉伸</li></ul><p>不允许拉伸的背景我们会把背景的尺寸做到1624x1000，这两个值来源于我们制定的标准是最大适配好19.5:9，和最小适配4:3，当设备的分辨率在这我们制定的标准内时背景就是1624x1000里裁减的效果，如果超出这个标准我们就使用等比缩放处理背景。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs csharp">RectTransform _rectTrans = GetComponent&lt;RectTransform&gt;();<br><br>CanvasScaler _scaler = _rectTrans.GetComponentInParent&lt;CanvasScaler&gt;();<br>RectTransform _rectTransform = _scaler.GetComponent&lt;RectTransform&gt;();<br><span class="hljs-built_in">float</span> _width = _rectTransform.sizeDelta.x;<br><span class="hljs-built_in">float</span> _height = _rectTransform.sizeDelta.y;<br><br><span class="hljs-built_in">float</span> _xScale = _width / _rectTrans.sizeDelta.x;<br><span class="hljs-built_in">float</span> _yScale = _height / _rectTrans.sizeDelta.y;<br><span class="hljs-keyword">var</span> _scale = (_xScale &gt; _yScale) ? _xScale : _yScale;<br><br>_rectTrans.localScale = <span class="hljs-keyword">new</span> Vector2(_scale,_scale);<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647500025530-33cb7408-3dbc-4ae7-9ae8-3b9e02c666b9.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=370&id=u535fb7db&margin=%5Bobject%20Object%5D&name=image.png&originHeight=850&originWidth=804&originalType=binary&ratio=1&rotation=0&showTitle=true&size=883448&status=done&style=none&taskId=uab0d66b4-0a8c-429f-a40f-9a6f652270b&title=iPhone%20X&width=350" alt="image.png" title="iPhone X"><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647499995353-56bd9ec7-0012-448b-a8b5-4dcd3b99b872.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=373&id=u24770e49&margin=%5Bobject%20Object%5D&name=image.png&originHeight=852&originWidth=800&originalType=binary&ratio=1&rotation=0&showTitle=true&size=824432&status=done&style=none&taskId=uc68a60b9-c983-45e4-b330-f78b2c01d6c&title=iPhone%208&width=350" alt="image.png" title="iPhone 8"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647504877120-eabf7338-9791-4133-bc86-9c6c6d85c763.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=241&id=u761b2831&margin=%5Bobject%20Object%5D&name=image.png&originHeight=330&originWidth=915&originalType=binary&ratio=1&rotation=0&showTitle=true&size=464127&status=done&style=none&taskId=u52c5adfa-0d2e-47de-a617-717c1031e38&title=ipad%20Pro%2012&width=669" alt="image.png" title="ipad Pro 12"><br>最后就能得到一个比较完善的结果<br><img src="https://cdn.nlark.com/yuque/0/2022/gif/21441051/1647507201673-d6146146-a343-4685-bb2a-6338a1ac1d0a.gif#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=ui&height=459&id=u98ca869d&name=GIF%202022-3-17%2016-52-03.gif&originHeight=782&originWidth=1192&originalType=binary&ratio=1&rotation=0&showTitle=false&size=5117190&status=done&style=none&taskId=udb1a698b-01a1-4c5f-a9ac-59196550249&title=&width=699" alt="GIF 2022-3-17 16-52-03.gif"></p><h1 id="五、异形屏适配"><a href="#五、异形屏适配" class="headerlink" title="五、异形屏适配"></a>五、异形屏适配</h1><p>虽然上面的制作已经能比较完善的解决UI适配问题了，但是Android机器太多样性了一些特殊设备还是会存在遮挡UI，以及玩家也会有各种适配要求。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647510211473-810e7f0f-8376-4cee-a722-7395a34e08d5.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=328&id=u37aeef7c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=328&originWidth=413&originalType=binary&ratio=1&rotation=0&showTitle=true&size=224289&status=done&style=none&taskId=u22c90b8b-832d-4096-94fd-f0ae5f75ea1&title=%E4%B8%89%E6%98%9F%20Galaxy%20Z%20%E8%BF%99%E7%A7%8D%E7%89%B9%E6%AE%8A%E6%83%85%E5%86%B5%E8%BF%98%E6%98%AF%E6%9C%89%E9%81%AE%E6%8C%A1&width=413" alt="image.png" title="三星 Galaxy Z 这种特殊情况还是有遮挡"><br>为了应对这种情况我们抽出个参数让玩家能够按照自己的意思调整UI左右的适配间隔。这个参数一般放在游戏设置界面。<br><img src="https://cdn.nlark.com/yuque/0/2022/gif/21441051/1647515025011-ff471683-08ad-42b0-a8ee-f19dcb282792.gif#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=ua21e0121&margin=%5Bobject%20Object%5D&name=GIF%202022-3-17%2019-02-21.gif&originHeight=470&originWidth=584&originalType=binary&ratio=1&rotation=0&showTitle=false&size=817283&status=done&style=none&taskId=uf910dfec-261b-456c-9093-a9292cfc2d2&title=" alt="GIF 2022-3-17 19-02-21.gif"><br>这个值的初始值可以做得更加灵活点，可以使用一张设备数据表设置这个值的初始值，表里可以指定一些特殊设备给个我们定义好的初始值，玩家也可以在这基础上在调整。实现原理就是通过脚本根据设置好的值调整UI的anchorMax和anchorMin。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1647515618829-cbcb3b89-b191-40e6-958f-ec7291190f5b.png#clientId=ua939dc0e-6fd4-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=371&id=ua1cb8f50&margin=%5Bobject%20Object%5D&name=image.png&originHeight=432&originWidth=390&originalType=binary&ratio=1&rotation=0&showTitle=false&size=31828&status=done&style=none&taskId=u58da52e3-77d0-423e-a5de-f90a29d7651&title=&width=335" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>Unity开发笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Unity</tag>
      
      <tag>UGUI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Unity复刻尼尔：机械纪元-动作整理分析</title>
    <link href="/2022/03/11/unity-nier-animtion-analyse/"/>
    <url>/2022/03/11/unity-nier-animtion-analyse/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p><strong>申明：本文为笔记，仅供学习交流，严禁用于商业用途。</strong></p><h3 id="一、工具准备"><a href="#一、工具准备" class="headerlink" title="一、工具准备"></a>一、工具准备</h3><ul><li>Bayonetta Audio Tools：尼尔.dat文件解包打包软件，后面需要用到再说明</li></ul><p>：<a href="https://pan.baidu.com/s/1nL6pDJ5-iKS5fXy944puQg?pwd=4681">下载地址</a></p><h3 id="二、重新命名文件（十六进制转十进制）"><a href="#二、重新命名文件（十六进制转十进制）" class="headerlink" title="二、重新命名文件（十六进制转十进制）"></a>二、重新命名文件（十六进制转十进制）</h3><ul><li><p>我们会发现动作数据mot文件名称是用十六进制命名的，<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646639909564-6a80632b-b8a8-4e8c-87cc-3aad95e8a62d.png#clientId=u1169fb63-afd6-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=180&id=ua18cf2af&margin=%5Bobject%20Object%5D&name=image.png&originHeight=180&originWidth=159&originalType=binary&ratio=1&rotation=0&showTitle=false&size=4741&status=done&style=none&taskId=ud21e0889-71c0-49e7-a297-26cd5c536df&title=&width=159">很难阅读而且在软件中查看也是乱序的，所以我们现在把mot文件重新命名为十进制方便我们后续使用。</p></li><li><p>使用Bayonetta Audio Tools工具，拖拽pl000f.dat文件到Bayonetta Audio Tools工具下的PlatinumDat.exe上面，软件就会解包.dat数据。解包后我们会得到一批mot、bxm文件<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646640144021-fc64be34-fb40-47bd-84a4-b28fc59b8004.png#clientId=u1169fb63-afd6-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=265&id=u02cd8b3b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=265&originWidth=213&originalType=binary&ratio=1&rotation=0&showTitle=false&size=7525&status=done&style=none&taskId=ub5181f04-7b80-4f67-8a20-87f3b4df48f&title=&width=213"></p></li><li><p>编写代码对文件名称进行批量转换</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">MenuItem(<span class="hljs-string">&quot;尼尔工具箱/重新命名文件（十六进制转十进制）&quot;</span>)</span>]<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span>  <span class="hljs-title">RenameFile</span>()</span><br>&#123;<br>    <span class="hljs-built_in">string</span> _path = EditorUtility.SaveFolderPanel(<span class="hljs-string">&quot;选择文件夹&quot;</span>, <span class="hljs-string">&quot;F:/NieRData/pl/&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<br>    <span class="hljs-built_in">string</span> _newPath = _path + <span class="hljs-string">&quot;_new&quot;</span>;<br>    <span class="hljs-keyword">if</span> (!Directory.Exists(_newPath))<br>    &#123;<br>        Directory.CreateDirectory(_newPath);<br>    &#125;<br><br>    <span class="hljs-built_in">string</span>[] _files = System.IO.Directory.GetFiles(_path);<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> _filePath <span class="hljs-keyword">in</span> _files)<br>    &#123;<br>        <span class="hljs-keyword">var</span> _extension = Path.GetExtension(_filePath);<br>        <span class="hljs-keyword">var</span> _fileNameWithoutExtension = Path.GetFileNameWithoutExtension(_filePath);<br>        <span class="hljs-keyword">var</span> _newFileName = _fileNameWithoutExtension;<br>        <span class="hljs-built_in">string</span>[] _tmp = _fileNameWithoutExtension.Split(<span class="hljs-string">&#x27;_&#x27;</span>);<br>        <span class="hljs-keyword">if</span> (_tmp.Length &gt;= <span class="hljs-number">2</span>)<br>        &#123;<br>            <span class="hljs-comment">//进制转换</span><br>            <span class="hljs-built_in">int</span> _id = Convert.ToInt32(_tmp[<span class="hljs-number">1</span>], <span class="hljs-number">16</span>);<br>            <span class="hljs-comment">//保留五位数，列如：00001</span><br>            <span class="hljs-keyword">var</span> _format = <span class="hljs-built_in">string</span>.Format(<span class="hljs-string">&quot;&#123;0:d5&#125;&quot;</span>, _id);<br>            _tmp[<span class="hljs-number">1</span>] = _format;<br>            _newFileName = _tmp[<span class="hljs-number">0</span>];<br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">1</span>; i &lt; _tmp.Length; i++)<br>            &#123;<br>                _newFileName += <span class="hljs-string">&quot;_&quot;</span> + _tmp[i];<br>            &#125;<br>            <span class="hljs-keyword">var</span> _srcfileName = _newPath + <span class="hljs-string">&quot;/&quot;</span> + _newFileName + _extension;<br>            File.Copy(_filePath, _srcfileName);<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-keyword">var</span> _srcfileName = _newPath + <span class="hljs-string">&quot;/&quot;</span> + _newFileName + _extension;<br>            File.Copy(_filePath, _srcfileName);<br>        &#125;<br>    &#125;<br>    <br>    EditorUtility.DisplayDialog(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;处理完成！&quot;</span>, <span class="hljs-string">&quot;OK&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>得到我们想要的数据<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646640450073-f6e4b18d-603a-49e9-97ae-82c5ac6eece7.png#clientId=u1169fb63-afd6-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=305&id=u5e2f0518&margin=%5Bobject%20Object%5D&name=image.png&originHeight=305&originWidth=206&originalType=binary&ratio=1&rotation=0&showTitle=false&size=9139&status=done&style=none&taskId=ub93b84e2-a210-4062-a2a0-99c2fac5aa7&title=&width=206">这些数据继续保留着后面还要使用，再把模型命名后的文件夹pl000f_new拖拽到Bayonetta Audio Tools工具下的PlatinumDat.exe上面，软件会重新把数据打包为.dat文件pl000f_new.dat</p></li></ul><h4 id="三、自动拆分FBX动画片段"><a href="#三、自动拆分FBX动画片段" class="headerlink" title="三、自动拆分FBX动画片段"></a>三、自动拆分FBX动画片段</h4><ul><li><p>导入到unity里后我们会发现所有动作在一个Clips里，我们还得手动拆分太麻烦了，上面我们已经得到.dat数据解包后已经重新命名过的xxx.mot文件，.mot就是包含动作数据的，现在我们要解析.mot文件生成我们要的动画数据，最后自动化拆分。</p></li><li><p>.mot文件头数据结构</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">struct</span> &#123;<br>    <span class="hljs-built_in">char</span>      id[<span class="hljs-number">4</span>]; <span class="hljs-comment">// &quot;mot\0&quot;</span><br>    uint32    hash;<br>    uint16    flag;<br>    int16     frameCount;<br>    uint32    recordOffset;<br>    uint32    recordNumber;<br>    uint32    unknown; <span class="hljs-comment">// usually 0 or 0x003c0000, maybe two uint16</span><br>    <span class="hljs-built_in">string</span>    animName; <span class="hljs-comment">// found at most 12 bytes with terminating 0</span><br>&#125; <br></code></pre></td></tr></table></figure></li><li><p>解析mot文件数据生成动画帧数据文件</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">MenuItem(<span class="hljs-string">&quot;尼尔工具箱/解析mot文件生成数据&quot;</span>)</span>]<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ReadMotFile</span>()</span><br>&#123;<br>    <span class="hljs-built_in">string</span> _path = EditorUtility.SaveFolderPanel(<span class="hljs-string">&quot;选择文件夹&quot;</span>, <span class="hljs-string">&quot;F:/NieRData/pl/&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<br>    <span class="hljs-keyword">var</span> _directoryName = Path.GetFileName(_path);<br>    <span class="hljs-built_in">int</span> _firstFrame = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">int</span> _lastFrame = _firstFrame - <span class="hljs-number">1</span>;<br>    List&lt;<span class="hljs-built_in">string</span>&gt; _list = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;();<br>    <span class="hljs-built_in">string</span>[] _files = System.IO.Directory.GetFiles(_path);<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> _filePath <span class="hljs-keyword">in</span> _files)<br>    &#123;<br>        <span class="hljs-keyword">var</span> _extension = Path.GetExtension(_filePath);<br>        <span class="hljs-keyword">var</span> _fileNameWithoutExtension = Path.GetFileNameWithoutExtension(_filePath);<br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">         mot文件头结构</span><br><span class="hljs-comment">         struct &#123;</span><br><span class="hljs-comment">                char      id[4]; // &quot;mot\0&quot;</span><br><span class="hljs-comment">                uint32    hash;</span><br><span class="hljs-comment">                uint16    flag;</span><br><span class="hljs-comment">                int16     frameCount;</span><br><span class="hljs-comment">                uint32    recordOffset;</span><br><span class="hljs-comment">                uint32    recordNumber;</span><br><span class="hljs-comment">                uint32    unknown; // usually 0 or 0x003c0000, maybe two uint16</span><br><span class="hljs-comment">                string    animName; // found at most 12 bytes with terminating 0</span><br><span class="hljs-comment">            &#125; </span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">if</span> (_extension.Equals(<span class="hljs-string">&quot;.mot&quot;</span>))<br>        &#123;<br>            <span class="hljs-keyword">var</span> _fByte = File.ReadAllBytes(_filePath);<br>            <span class="hljs-comment">//读取动画片段总帧数</span><br>            <span class="hljs-keyword">var</span> _frameCount = BitConverter.ToInt16(_fByte, <span class="hljs-number">10</span>);<br>            _lastFrame += _frameCount;<br>            _list.Add(<span class="hljs-string">$&quot;<span class="hljs-subst">&#123;_firstFrame&#125;</span>|<span class="hljs-subst">&#123;_lastFrame&#125;</span>|<span class="hljs-subst">&#123;_fileNameWithoutExtension&#125;</span>&quot;</span>);<br>            _firstFrame += _frameCount;<br>        &#125;<br>    &#125;<br><br>    File.WriteAllLines(_path + <span class="hljs-string">$&quot;/<span class="hljs-subst">&#123;_directoryName&#125;</span>.txt&quot;</span>, _list);<br>    EditorUtility.DisplayDialog(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;解析成功！&quot;</span>, <span class="hljs-string">&quot;OK&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>读取帧数据自动拆分FBX动画数据</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> Clip数据</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">FbxClipData</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> mName;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> mFirstFrame;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> mLastFrame;<br>&#125;<br><br><br>[<span class="hljs-meta">MenuItem(<span class="hljs-string">&quot;尼尔工具箱/自动拆分FBX动画片段&quot;</span>)</span>]<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SplitFbxClip</span>()</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (EditorUtility.DisplayDialog(<span class="hljs-string">&quot;自动拆分FBX动画片段&quot;</span>, <span class="hljs-string">&quot;确认是否已在Project窗口下选中了要处理的FBX&quot;</span>, <span class="hljs-string">&quot;确定&quot;</span>, <span class="hljs-string">&quot;取消&quot;</span>))<br>    &#123;<br>        UnityEngine.Object[] _objects = Selection.GetFiltered(<span class="hljs-keyword">typeof</span>(UnityEngine.Object), SelectionMode.DeepAssets);<br>        <span class="hljs-built_in">int</span> _count = <span class="hljs-number">0</span>;<br>        <span class="hljs-built_in">int</span> _objectsLength = _objects.Length;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> obj <span class="hljs-keyword">in</span> _objects)<br>        &#123;<br>            _count++;<br>            <span class="hljs-built_in">string</span> _assetPath = AssetDatabase.GetAssetPath(obj);<br>            <span class="hljs-keyword">if</span> (Path.GetExtension(_assetPath)?.ToLower() != <span class="hljs-string">&quot;.fbx&quot;</span>)<br>            &#123;<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br><br>            EditorUtility.DisplayProgressBar(<span class="hljs-string">&quot;正在处理,请稍后&quot;</span>, _assetPath, (<span class="hljs-built_in">float</span>) (_count) / _objectsLength);<br>            List&lt;FbxClipData&gt; _fbxClipDataList = <span class="hljs-keyword">new</span> List&lt;FbxClipData&gt;();<br><br>            <span class="hljs-built_in">string</span> _extension = Path.ChangeExtension(_assetPath, <span class="hljs-string">&quot;txt&quot;</span>);<br>            <span class="hljs-keyword">if</span> (!File.Exists(_extension))<br>            &#123;<br>                Debug.LogError(_extension + <span class="hljs-string">&quot; 数据文件不存在！&quot;</span>);<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.IsNullOrEmpty(_extension))<br>            &#123;<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br><br>            StreamReader _reader = <span class="hljs-keyword">new</span> StreamReader(_extension);<br>            <span class="hljs-built_in">string</span> _line;<br>            <span class="hljs-keyword">while</span> ((_line = _reader.ReadLine()) != <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-built_in">string</span>[] _info = _line.Split(<span class="hljs-string">&#x27;|&#x27;</span>);<br>                FbxClipData _fbxClipData = <span class="hljs-keyword">new</span> FbxClipData<br>                &#123;<br>                    mFirstFrame = <span class="hljs-built_in">int</span>.Parse(_info[<span class="hljs-number">0</span>]),<br>                    mLastFrame = <span class="hljs-built_in">int</span>.Parse(_info[<span class="hljs-number">1</span>]), <br>                    mName = _info[<span class="hljs-number">2</span>]<br>                &#125;;<br>                _fbxClipDataList.Add(_fbxClipData);<br>            &#125;<br>            _reader.Close();<br>            <br>            ModelImporter _modelImporter = AssetImporter.GetAtPath(_assetPath) <span class="hljs-keyword">as</span> ModelImporter;<br>            ArrayList _clipsList = <span class="hljs-keyword">new</span> ArrayList();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; _fbxClipDataList.Count; i++)<br>            &#123;<br>                ModelImporterClipAnimation _clipAnimation = <span class="hljs-keyword">new</span> ModelImporterClipAnimation<br>                &#123;<br>                    name = _fbxClipDataList[i].mName,<br>                    firstFrame = _fbxClipDataList[i].mFirstFrame,<br>                    lastFrame = _fbxClipDataList[i].mLastFrame<br>                &#125;;<br>                _clipsList.Add(_clipAnimation);<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (_modelImporter != <span class="hljs-literal">null</span>)<br>            &#123;<br>                _modelImporter.clipAnimations =<br>                    (ModelImporterClipAnimation[]) _clipsList.ToArray(<span class="hljs-keyword">typeof</span>(ModelImporterClipAnimation));<br>                _modelImporter.SaveAndReimport();<br>            &#125;<br>        &#125;<br>        <br>        AssetDatabase.Refresh();<br>        EditorUtility.ClearProgressBar();<br>        EditorUtility.DisplayDialog(<span class="hljs-string">&quot;提示&quot;</span>, <span class="hljs-string">&quot;处理完成&quot;</span>, <span class="hljs-string">&quot;OK&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>最后就可以得到拆分好的动作片段的数据了<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646649732532-2268d419-1ac3-4230-b3c4-cab61b473b6d.png#clientId=u1f17e11f-1786-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=431&id=uffe06534&margin=%5Bobject%20Object%5D&name=image.png&originHeight=833&originWidth=572&originalType=binary&ratio=1&rotation=0&showTitle=false&size=226978&status=done&style=none&taskId=u0e99c382-ee7b-428c-a67e-5c8d0ea324f&title=&width=296"></p></li></ul><h3 id="四、数据整理分析"><a href="#四、数据整理分析" class="headerlink" title="四、数据整理分析"></a>四、数据整理分析</h3><ul><li><strong>尼尔资源格式解析：</strong></li></ul><p>文件夹：<br>pl： 主角模型和动作        wd：场景        wp：武器、        um：NPC、        em：敌人<br>文件类型：<br>.dtt：模型和贴图                 .dat：动画</p><p>Tips：前缀编号相同则为一个角色资源， pl…f结尾且文件较大，一般是动画文件。</p><ul><li><strong>基本操作</strong>：</li></ul><p>弱攻击、强攻击、冲刺、跳跃、二段跳<br>跳跃+强攻击 &#x3D; 上挑<br>长按弱|强攻击键 &#x3D; 特殊攻击<br>冲刺状态下+强攻击 &#x3D; 冲刺攻击<br>冲刺+弱攻击 &#x3D; 旋转攻击<br>空中状态+强攻击 &#x3D; 下劈<br>空中状态+冲刺+强攻击 &#x3D; 斜向下下劈<br>闪避后攻击+弱攻击|强攻击 &#x3D; 闪避攻击</p><ul><li><strong>角色动作id整理</strong>：</li></ul><p>在查看武器动画时会发现武器种类是有划分id的，而且人物动画和武器动画id是有匹配关系的<br>通用动作：    动画id：[0<del>256)            十六进制：[0</del>99)<br>小型剑000：    动画id：[256<del>512)        十六进制：[100</del>200)<br>大型剑200：    动画id：[512<del>768)        十六进制：[200</del>300)<br>抢400：        动画id：[768<del>1024)        十六进制：[300</del>400)<br>格斗600：    动画id：[1024<del>1280)        十六进制：[400</del>500)<br>空手：        动画id：[1280<del>1536)        十六进制：[500</del>600)</p><ul><li><strong>小型剑连招：</strong></li></ul><p>弱连击：动作id【00256、00257、00258、00259、00260、00261、00262】<br>弱长按：动作id【】<br>强连击：动作id【00272、00275、00278】<br>强长按：动作id【】</p><ul><li><strong>抢连招：</strong></li></ul><p>弱连击：动作id【00768、00769、00770、00771、00772、00773】</p><h3 id="五、最后把角色动画和武器动画匹配上"><a href="#五、最后把角色动画和武器动画匹配上" class="headerlink" title="五、最后把角色动画和武器动画匹配上"></a>五、最后把角色动画和武器动画匹配上</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/gif/21441051/1646998020346-c13ea1a6-a718-44df-8ac4-03d16060a592.gif#clientId=uc38da9b7-f9cf-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u0b658452&margin=%5Bobject%20Object%5D&name=d8vem-ufld5.gif&originHeight=208&originWidth=368&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1639501&status=done&style=none&taskId=ueab3af6a-1230-4c58-88a9-a665258a4e0&title="></p><hr><p>参考：<br><a href="https://forum.xentax.com/viewtopic.php?f=10&t=16011&start=120">https://forum.xentax.com/viewtopic.php?f=10&t=16011&start=120</a><br><a href="https://steamcommunity.com/sharedfiles/filedetails/?id=1178661446">https://steamcommunity.com/sharedfiles/filedetails/?id=1178661446</a><br><a href="https://www.cgjoy.com/thread-217954-1-1.html">https://www.cgjoy.com/thread-217954-1-1.html</a><br><a href="https://www.bilibili.com/video/BV14W411T737?t=455">https://www.bilibili.com/video/BV14W411T737?t=455</a></p>]]></content>
    
    
    <categories>
      
      <category>Unity复刻尼尔：机械纪元</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Unity</tag>
      
      <tag>尼尔：机械纪元</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Unity复刻尼尔：机械纪元-动作导出</title>
    <link href="/2022/03/08/unity-nier-animtion/"/>
    <url>/2022/03/08/unity-nier-animtion/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>&lt;<strong>申明：本文为笔记，仅供学习交流，严禁用于商业用途。</strong></p><h3 id="一、工具准备"><a href="#一、工具准备" class="headerlink" title="一、工具准备"></a>一、工具准备</h3><ul><li>Noesis：提取工具</li></ul><p> ：<a href="https://richwhitehouse.com/index.php?content=inc_projects.php&showproject=91">下载地址</a></p><ul><li>noesis_bayonetta_pc：noesis插件用来提取尼尔动作文件，下载后解压放到对应Noesis软件目录下。</li></ul><p> ：<a href="https://github.com/Kerilk/noesis_bayonetta_pc">下载地址</a></p><h4 id="二、导出动作数据"><a href="#二、导出动作数据" class="headerlink" title="二、导出动作数据"></a>二、导出动作数据</h4><ul><li>Noesis打开pl0000.dtt文件，会提示<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646638699792-9d5eacc9-3591-4f9c-9af4-f538cd30d37e.png#clientId=u1169fb63-afd6-4&from=paste&height=370&id=u83dcfeae&margin=%5Bobject%20Object%5D&name=image.png&originHeight=778&originWidth=1155&originalType=binary&ratio=1&size=63908&status=done&style=none&taskId=ub8fd486d-e531-403b-91b8-e65b0793641&width=550" alt="image.png">，选择OK后选择pl000f.dat(动作数据文件)文件，再弹出<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646638779813-19490ae3-374b-47e0-b73d-8bda59c5f73b.png#clientId=u1169fb63-afd6-4&from=paste&height=54&id=u6fea8bfd&margin=%5Bobject%20Object%5D&name=image.png&originHeight=120&originWidth=471&originalType=binary&ratio=1&size=5598&status=done&style=none&taskId=ua0137e33-3a24-4bc2-a497-eaf6f533a6d&width=212" alt="image.png">选择取消。就可以查看角色所以动作文件了<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646638946751-73b46574-277a-49f7-b0c2-76ad965422bf.png#clientId=u1169fb63-afd6-4&from=paste&height=286&id=ufcd2db94&margin=%5Bobject%20Object%5D&name=image.png&originHeight=785&originWidth=1354&originalType=binary&ratio=1&size=266797&status=done&style=none&taskId=u7eb7deaa-e901-4d99-8fd2-320f6ecd550&width=494" alt="image.png"></li><li>导出动作数据，选择FIle-&gt;Export导出模型数据<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646618162375-c738a153-9809-458f-877a-c7a8e526969b.png#clientId=u98df1ac2-2012-4&from=paste&height=196&id=en8vY&margin=%5Bobject%20Object%5D&name=image.png&originHeight=196&originWidth=193&originalType=binary&ratio=1&size=5851&status=done&style=none&taskId=u69d42b5f-35b5-4ecd-b650-99310cd93cd&width=193" alt="image.png">，选择导出FBX格式点击Export按钮-&gt;点击OK<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646645292941-edc43083-acf4-4a54-a522-aafcda0bcccb.png#clientId=u1f17e11f-1786-4&from=paste&height=254&id=AgzyY&margin=%5Bobject%20Object%5D&name=image.png&originHeight=472&originWidth=478&originalType=binary&ratio=1&size=24993&status=done&style=none&taskId=u393a4292-5450-489f-aae7-5ccd4f4f76b&width=257" alt="image.png">-&gt;在弹出的文件选择pl000f.dat文件，得到带动作数据的FBX文件。</li><li>在unity里导出就可以查看动作了<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646646262675-cfdc04e9-3668-443f-b12b-539408b47cff.png#clientId=u1f17e11f-1786-4&from=paste&height=379&id=t9P4l&margin=%5Bobject%20Object%5D&name=image.png&originHeight=986&originWidth=585&originalType=binary&ratio=1&size=228930&status=done&style=none&taskId=u1909de92-3ac4-4ab0-a8dc-0f15f7a72f2&width=225" alt="image.png"></li></ul>]]></content>
    
    
    <categories>
      
      <category>Unity复刻尼尔：机械纪元</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Unity</tag>
      
      <tag>尼尔：机械纪元</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Unity复刻尼尔：机械纪元-模型导出</title>
    <link href="/2022/03/07/unity-nier-mode/"/>
    <url>/2022/03/07/unity-nier-mode/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p><strong>申明：本文为笔记，仅供学习交流，严禁用于商业用途。</strong></p><ul><li>购买下载尼尔游戏工程</li><li>下载Noesis提取工具：<a href="https://richwhitehouse.com/index.php?content=inc_projects.php&showproject=91">下载地址</a></li><li>运行Noesis，找到游戏工程下data-&gt;data006.cpk和data100.cpk(包含dlc模型数据)文件，在Noesis内双击这两个文件进行解包数据</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646617728531-68aabe20-d8f8-464e-bd4a-a6e8752f74b4.png#clientId=u98df1ac2-2012-4&from=paste&height=271&id=ub2bc749f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=777&originWidth=1160&originalType=binary&ratio=1&size=78051&status=done&style=none&taskId=u2c109d21-5bb1-41e4-968d-54e4c30f8e1&width=405" alt="image.png">，</p><ul><li><p>解包后pl文件夹里的数据<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646472686158-78746b57-8ca6-4170-90da-9f1978864cdf.png#clientId=u3c7b96c2-e40b-4&from=paste&height=102&id=u29aa36a7&margin=%5Bobject%20Object%5D&name=image.png&originHeight=183&originWidth=481&originalType=binary&ratio=1&size=9796&status=done&style=none&taskId=u7c430dc7-161c-476d-ad86-9fed02277dd&width=269" alt="image.png"></p></li><li><p>在Noesis打开pl0000.dtt文件就可以预览模型了</p></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646617791683-801e6a25-6a29-4b75-8bc9-9dbc3cf275ed.png#clientId=u98df1ac2-2012-4&from=paste&height=303&id=u62ca771f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=778&originWidth=1154&originalType=binary&ratio=1&size=187256&status=done&style=none&taskId=u72d88b87-9970-435d-ac2f-3ca5b98a597&width=450" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646617916817-8ca32abe-8036-448a-a487-8df2643344bf.png#clientId=u98df1ac2-2012-4&from=paste&height=301&id=udcc88d2e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=775&originWidth=1158&originalType=binary&ratio=1&size=204817&status=done&style=none&taskId=u4129e6bd-dc4f-41a8-b2a7-b29e1bc2946&width=450" alt="image.png"></p><ul><li>选择FIle-&gt;Export导出模型数据<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646618162375-c738a153-9809-458f-877a-c7a8e526969b.png#clientId=u98df1ac2-2012-4&from=paste&height=196&id=u45a01a1f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=196&originWidth=193&originalType=binary&ratio=1&size=5851&status=done&style=none&taskId=u69d42b5f-35b5-4ecd-b650-99310cd93cd&width=193" alt="image.png">，选择导出FBX格式<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646618099627-23ce161c-3a3c-4df1-adfe-6f37c82ed74a.png#clientId=u98df1ac2-2012-4&from=paste&height=318&id=u3ff8ee1b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=471&originWidth=475&originalType=binary&ratio=1&size=19551&status=done&style=none&taskId=u5091b8d2-419e-4902-b96f-0f1187affd1&width=321" alt="image.png">，得到导出后的数据<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646473678938-caf57b88-e7b9-4fd4-8841-fe91a7f6727c.png#clientId=u3c7b96c2-e40b-4&from=paste&height=318&id=uec9aef3e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=318&originWidth=811&originalType=binary&ratio=1&size=124133&status=done&style=none&taskId=u15b54ddc-fa3a-4c16-a177-b86c59e57ff&width=811" alt="image.png"></li><li>把fxb导到unity引擎看看效果<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646474097693-2842c9f6-fc1a-40f9-a60f-251fa8ca9f20.png#clientId=u3c7b96c2-e40b-4&from=paste&height=341&id=ufaa42c44&margin=%5Bobject%20Object%5D&name=image.png&originHeight=895&originWidth=1585&originalType=binary&ratio=1&size=394433&status=done&style=none&taskId=u15cc12d4-49dd-442d-9c5b-3797f61dbee&width=604" alt="image.png"></li><li>最后贴上材质球<img src="https://cdn.nlark.com/yuque/0/2022/png/21441051/1646474394778-2e28e64b-9d54-4317-b4b9-51a6cdb78578.png#clientId=u3c7b96c2-e40b-4&from=paste&height=977&id=u07577c67&margin=%5Bobject%20Object%5D&name=image.png&originHeight=977&originWidth=1870&originalType=binary&ratio=1&size=2845094&status=done&style=none&taskId=ueb1655f2-9d50-40c3-9636-a33f35179e5&width=1870" alt="image.png"></li></ul><p>备注：</p><ol><li>导出的时候可以选择dae格式导出，dae格式导出会带上材质信息，然后用3dmax软件再导出fbx</li><li>模型是同时包含多个时装的，在用的时候需要手动隐藏节点</li><li>直接导出的fbx数据导入到unity时，大小单位不一致，需要在unity模型设置里去掉Convert Units</li></ol>]]></content>
    
    
    <categories>
      
      <category>Unity复刻尼尔：机械纪元</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Unity</tag>
      
      <tag>尼尔：机械纪元</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Unity动态适配相机FOV</title>
    <link href="/2019/05/14/unity-camera-fov/"/>
    <url>/2019/05/14/unity-camera-fov/</url>
    
    <content type="html"><![CDATA[<p>根据设置的视野，在不同分辨率下自动调整相机FOV </p><span id="more"></span><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> UnityEngine;<br> <br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 相机FOV自动调整</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 根据设置的视野自动调整相机FOV</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CameraFOVAdjust</span> : <span class="hljs-title">MonoBehaviour</span><br>&#123;<br>    [<span class="hljs-meta">Tooltip(<span class="hljs-string">&quot;距离&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">float</span> distance = <span class="hljs-number">20f</span>;<br>    [<span class="hljs-meta">Tooltip(<span class="hljs-string">&quot;宽度&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">float</span> frustumWidth = <span class="hljs-number">40.3f</span>;<br>    [<span class="hljs-meta">Tooltip(<span class="hljs-string">&quot;限制最大的FOV值&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">float</span> maxFOV = <span class="hljs-number">65</span>;<br> <br>    <span class="hljs-keyword">private</span> Camera mainCamera;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">float</span> cameraAspect;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Start</span>()</span><br>    &#123;<br>        mainCamera = Camera.main;<br>        CameraAdjust();<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Update</span>()</span><br>    &#123;<br><span class="hljs-meta">#<span class="hljs-keyword">if</span> UNITY_EDITOR</span><br>        CameraAdjust();<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br>    &#125;<br> <br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 动态调整相机FOV，使不同分辨率下相机能看到相同的宽度视野</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    [<span class="hljs-meta">ContextMenu(<span class="hljs-string">&quot;执行&quot;</span>)</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CameraAdjust</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (mainCamera == <span class="hljs-literal">null</span>) <span class="hljs-keyword">return</span>;<br>        <span class="hljs-comment">//分辨率发生改变时才需要重新刷新</span><br>        <span class="hljs-keyword">if</span> (cameraAspect.Equals(mainCamera.aspect)) <span class="hljs-keyword">return</span>;<br> <br>        cameraAspect = mainCamera.aspect;<br>        <span class="hljs-comment">//计算Fov</span><br>        <span class="hljs-built_in">float</span> _fov = <span class="hljs-number">2</span> * Mathf.Atan(frustumWidth / cameraAspect * <span class="hljs-number">0.5f</span> / distance) * Mathf.Rad2Deg;<br>        <span class="hljs-comment">//防止Fov过大，设置最大值</span><br>        <span class="hljs-keyword">if</span> (maxFOV &gt; <span class="hljs-number">0</span> &amp;&amp;_fov &gt; maxFOV)<br>        &#123;<br>            _fov = maxFOV;<br>        &#125;<br>        mainCamera.fieldOfView = _fov;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Unity开发笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Unity</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
